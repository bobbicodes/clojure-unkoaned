Unkoaned 3. Vectors

You can use vectors in clojure as array-like structures

user=> (count [42])
1

You can create a vector from a list

user=> (vec '(1))
[1]

Or from some elements

user=> (vector nil nil)
[nil nil]

But you can populate it with any number of elements at once

user=> (vec '(1 2))
[1 2]

Conjoining to a vector is different than to a list

user=> (conj [111 222] 333)
[111 222 333]

You can get the first element of a vector like so

user=> (first [:peanut :butter :and :jelly])
:peanut

And the last in a similar fashion

user=> (last [:peanut :butter :and :jelly])
:jelly

Or any index if you wish

user=> (nth [:peanut :butter :and :jelly] 3)
:jelly

You can also slice a vector

user=> (subvec [:peanut :butter :and :jelly] 1 3)
[:butter :and]

Equality with collections is in terms of values

user=> (= (list 1 2 3) (vector 1 2 3))
true